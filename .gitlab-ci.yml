variables:
  DOCKER_TLS_CERTDIR: "/certs"
  APP: "my-app"

stages:
  - lint
  - build
  - test

lint-job:
  stage: lint
  image: golang:1.21
  before_script:
    - go install golang.org/x/lint/golint@latest
    - export PATH=$PATH:$(go env GOPATH)/bin
  script:
    - golint ./... > golint-report.txt || true
  artifacts:
    paths:
      - golint-report.txt
    expire_in: 1 week

build:
  stage: build
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  before_script:
    - docker info
    - echo "$HARBOR_PASSWORD" | docker login -u "$HARBOR_USERNAME" "$HARBOR_HOST" --password-stdin
  script:
    - docker build -t my-docker-image .
    - docker tag my-docker-image $HARBOR_HOST/$HARBOR_PROJECT/$APP:$CI_JOB_ID
    - docker tag my-docker-image $HARBOR_HOST/$HARBOR_PROJECT/$APP:latest
    - docker push $HARBOR_HOST/$HARBOR_PROJECT/$APP:$CI_JOB_ID
    - docker push $HARBOR_HOST/$HARBOR_PROJECT/$APP:latest

container_scanning:
  stage: test
  image:
    name: $HARBOR_HOST/docker-hub-cache/aquasec/trivy:latest
    entrypoint: [""]
  variables:
    GIT_STRATEGY: none
    TRIVY_USERNAME: "$HARBOR_USERNAME"
    TRIVY_PASSWORD: "$HARBOR_PASSWORD"
    TRIVY_AUTH_URL: "$HARBOR_HOST"
    FULL_IMAGE_NAME: $HARBOR_HOST/$HARBOR_PROJECT/$APP:latest
  script:
    - trivy --version
    - trivy clean --scan-cache
    - time trivy image --download-db-only --no-progress --cache-dir .trivycache/
    - time trivy image --exit-code 0 --cache-dir .trivycache/ --no-progress --format template --template "@/contrib/gitlab.tpl" --output "$CI_PROJECT_DIR/gl-container-scanning-report.json" "$FULL_IMAGE_NAME"
    - time trivy image --exit-code 0 --cache-dir .trivycache/ --no-progress "$FULL_IMAGE_NAME"
    - time trivy image --exit-code 1 --cache-dir .trivycache/ --severity CRITICAL --no-progress "$FULL_IMAGE_NAME"
  cache:
    paths:
      - .trivycache/
  artifacts:
    when: always
    reports:
      container_scanning: gl-container-scanning-report.json
  tags:
    - docker
  needs:
    - build
unit-tests:
  stage: test
  image: golang:1.24.3
  script:
    - go mod tidy
    - go test -v -coverprofile=coverage.out ./...
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.out
    paths:
      - coverage.out
    expire_in: 1 week

integration-tests:
  stage: test
  image: golang:1.24.3
  script:
    - go mod tidy
    - go test -v ./tests/integration || true
